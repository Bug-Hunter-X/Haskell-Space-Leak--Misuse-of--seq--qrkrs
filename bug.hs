This code suffers from a common Haskell pitfall: it uses `seq` incorrectly, leading to space leaks. The problem arises when `expensiveComputation` is a potentially very large data structure or computation and isn't properly forced.  The `seq` in the `let` binding only forces evaluation of `x` to weak head normal form (WHNF), which isn't sufficient for large data structures. The rest of the structure might remain unevaluated, leading to an accumulation of thunks in memory. 